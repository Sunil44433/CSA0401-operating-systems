#include <stdio.h>

#define MAX 20
#define MAX_FRAMES 3

int findLRU(int time[], int n) {
    int i, minimum = time[0], pos = 0;
    for (i = 1; i < n; ++i) {
        if (time[i] < minimum) {
            minimum = time[i];
            pos = i;
        }
    }
    return pos;
}

int main() {
    int pages[MAX] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2, 1, 2, 0, 1, 7, 0, 1};
    int frames[MAX_FRAMES];
    int time[MAX_FRAMES];
    int i, j, pos, faults = 0;
    int flag, flag1;

    for (i = 0; i < MAX_FRAMES; ++i) {
        frames[i] = -1;
    }

    for (i = 0; i < MAX; ++i) {
        flag1 = 0;
        flag = 0;

        for (j = 0; j < MAX_FRAMES; ++j) {
            if (frames[j] == pages[i]) {
                time[j] = i;
                flag = 1;
                flag1 = 1;
                break;
            }
        }

        if (flag == 0) {
            for (j = 0; j < MAX_FRAMES; ++j) {
                if (frames[j] == -1) {
                    faults++;
                    frames[j] = pages[i];
                    time[j] = i;
                    flag1 = 1;
                    break;
                }
            }
        }

        if (flag1 == 0) {
            pos = findLRU(time, MAX_FRAMES);
            faults++;
            frames[pos] = pages[i];
            time[pos] = i;
        }

        printf("\n");
        for (j = 0; j < MAX_FRAMES; ++j) {
            printf("%d\t", frames[j]);
        }
    }

    printf("\nTotal page faults: %d", faults);
    return 0;
}
