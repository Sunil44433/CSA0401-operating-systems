#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

#define MAX_NUM 50

int main() {
  pid_t pid;

  for (int i = 0; i < 4; i++) {
    pid = fork();
    if (pid < 0) {
      perror("Error creating child process\n");
      exit(1);
    } else if (pid == 0) {
      break;
    }
  }

  // First child process: Print the odd numbers
  if (pid == 0 && getpid() % 4 == 1) {
    for (int i = 1; i <= MAX_NUM; i += 2) {
      printf("Child Process 1 (PID: %d): %d\n", getpid(), i);
    }
  }

  // Second child process: Print the even numbers
  if (pid == 0 && getpid() % 4 == 2) {
    for (int i = 2; i <= MAX_NUM; i += 2) {
      printf("Child Process 2 (PID: %d): %d\n", getpid(), i);
    }
  }

  // Third child process: Print the multiples of 3
  if (pid == 0 && getpid() % 4 == 3) {
    for (int i = 3; i <= MAX_NUM; i += 3) {
      printf("Child Process 3 (PID: %d): %d\n", getpid(), i);
    }
  }

  // Fourth child process: Print the multiples of 5
  if (pid == 0 && getpid() % 4 == 0) {
    for (int i = 5; i <= MAX_NUM; i += 5) {
      printf("Child Process 4 (PID: %d): %d\n", getpid(), i);
    }
  }

  wait(NULL);
  return 0;
}
