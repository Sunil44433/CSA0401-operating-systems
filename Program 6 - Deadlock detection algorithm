#include<stdio.h>
#include<stdlib.h>

#define MAX 100

int Need[MAX][MAX], Alloc[MAX][MAX], Max[MAX][MAX];
int avail[MAX], work[MAX];
int m, n;

void readData()
{
    printf("Enter the number of processes and resources : ");
    scanf("%d%d", &n, &m);
    printf("Enter the allocation matrix : \n");
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            scanf("%d", &Alloc[i][j]);
    printf("Enter the maximum matrix : \n");
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            scanf("%d", &Max[i][j]);
    printf("Enter the available resources : \n");
    for(int i=0;i<m;i++)
        scanf("%d", &avail[i]);
}

void calcNeed()
{
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            Need[i][j]=Max[i][j]-Alloc[i][j];
}

void isSafe()
{
    int finish[MAX];
    for(int i=0;i<n;i++)
        finish[i]=0;
    for(int i=0;i<m;i++)
        work[i]=avail[i];
    int cnt=0;
    for(int i=0;i<n;i++)
    {
        int flag=0;
        for(int j=0;j<n;j++)
        {
            if(finish[j]==0)
            {
                int t=0;
                for(int k=0;k<m;k++)
                {
                    if(Need[j][k]<=work[k])
                        t=t+1;
                }
                if(t==m)
                {
                    for(int k=0;k<m;k++)
                        work[k]=work[k]+Alloc[j][k];
                    finish[j]=1;
                    flag=1;
                    cnt=cnt+1;
                }
            }
        }
        if(flag==0)
        {
            printf("The system is in deadlock state\n");
            return;
        }
    }
    if(cnt==n)
        printf("The system is in safe state\n");
}

int main()
{
    readData();
    calcNeed();
    isSafe();
    return 0;
}
